C# 6: Melhorias em Coleções, Propriedades, Exceções e Strings
	01 - Propriedades Mais Simples
		01 - Preparando o ambiente
		02 - Introdução
		03 - Propriedades Automáticas
		04 - Propriedades Sem Setter
		05 - Imutabilidade e Private Set
		06 - Propriedades Automáticas Somente Leitura
		07 - private set VS Propriedade Automática Somente-Leitura (C)
		08 - Inicializadores de Propriedade Automática
		09 - SintaxeDeExpressao em Propriedades e Métodos
		10 - Inicializando Propriedades Automáticas (A)
		11 - Método com sintaxe de expressão (A)
		12 - Mão na massa - propriedade com sintaxe de expressão
		13 - Consolidando seu conhecimento
		14 - O que aprendemos?
		15 - Para saber mais
		16 - Projeto da Aula Atual
	02 - Um Intelisense Mais Inteligente
		01 - Using Static
		02 - Acessando método estático sem mencionar nome da classe (C)
		03 - Operadores Null Condicionais
		04 - Sintaxe de expresssão e operadores null-condicionais (C)
		05 - Operador null-condicional (A)
		06 - Consolidando seu conhecimento
		07 - O que aprendemos?
		08 - Projeto da Aula Atual
	03 - Strings Mais Inteligentes
		01 - Interpolação de Strings
		02 - Concatenando strings (A / B / C)
		03 - Interpolando strings (A)
		04 - Para saber mais - Interpolação de Strings
		05 - Monitorando Alteração em Propriedades
		06 - Expressoes NameOf
		07 - Interpolação de strings e expressões nameof (C)
		08 - Consolidando seu conhecimento
		09 - O que aprendemos?
		10 - Projeto da Aula Atual
	04 - Exceções Aprimoradas
		01 - Validando Parâmetros
		02 - Validação de parâmetros no construtor (A)
		03 - Filtros de Exceção
		04 - Filtro de exceção (C)
		05 - Funcionamento do filtro de exceção (A)
		06 - Await em Catch e Finally
		07 - Consolidando seu conhecimento
		08 - O que aprendemos?
		09 - Projeto da Aula Atual
	05 - Melhorias em Coleções
		01 - Inicializadores de Índices
		02 - Inicializando coleção com índices (A)
		03 - Criando Lista Customizada com IEnumerable
		04 - Varrendo uma coleção com foreach (B)
		05 - Métodos De Extensão Para Inicializadores de Coleção
		06 - Inicializando uma coleção custom (C)
		07 - Consolidando seu conhecimento
		08 - O que aprendemos?
		09 - Projeto da Aula Atual
		10 - Conclusão
C# 7: Tuplas, parâmetros, condicionais, e estilo de código
	01 - Melhorias em Parâmetros
		01 - Introdução
		02 - Preparando o ambiente
		03 - Projeto Inicial da Aula Atual
		04 - Variáveis Out
		05 - Sintaxe das variáveis out (B / E)
		06 - Locais e Retornos de Ref
		07 - Retornando referências
		08 - Parâmetros in
		09 - Diferenças entre ref, out e in (A / B / D)
		10 - Argumentos Nomeados
		11 - Argumentos nomeados (A / B / C / D / F / G)
		12 - O que aprendemos?
		13 - Projeto Final da Aula Atual
	02 - Tuplas
		01 - Projeto Inicial da Aula Atual
		02 - Tuplas
		03 - Retornando múltiplos valores (A / D / E / F)
		04 - ValueTuple x Class (A / C / E)
		05 - Descartes
		06 - Usando ValueTuples (C)
		07 - Para saber mais - Tuplas
		08 - Consolidando seu conhecimento
		09 - O que aprendemos?
		10 - Projeto Final da Aula Atual
	03 - Melhorias em Condicionais
		01 - Projeto Inicial da Aula Atual
		02 - Correspondência de Padrões
		03 - Correspondência de padrões (B)
		04 - Switch com Correspondência de Padrões
		05 - Sintaxe de switch com correspondência de padrões (B)
		06 - Expressões Throw
		07 - Expressões throw (A)
		08 - Consolidando seu conhecimento
		09 - O que aprendemos?
		10 - Projeto Final da Aula Atual
	04 - Literais e Valores Padrão
		01 - Projeto Inicial da Aula Atual
		02 - Aprimoramento de Literais Numéricos
		03 - Números mais legíveis (B / C)
		04 - Números binários no C# (C)
		05 - Async Main
		06 - Método Main Assíncrono (A)
		07 - Expressão Literal Padrão
		08 - Valor padrão de literais (C)
		09 - Consolidando seu conhecimento
		10 - O que aprendemos?
		11 - Projeto Final da Aula Atual
	05 - Estilo de Código
		01 - Projeto Inicial da Aula Atual
		02 - Funções Locais
		03 - Funções Locais (C)
		04 - Mais Membros com Sintaxe de Expressão
		05 - Propriedade com Sintaxe de Expressão (C)
		06 - Estilo de Código
		07 - EditorConfig
		08 - Estilo de Código e EditorConfig (B)
		09 - Para saber mais - Extensão Visual Studio para EditorConfig
		10 - Consolidando seu conhecimento
		11 - Projeto Final da Aula Atual
		12 - O que aprendemos?
		13 - Conclusão
C# 7.3: Igualdade em tuplas, expression variables e refs
	01 - Tuples
		01 - Introdução
		02 - Igualdade entre tuples
		03 - Igualdade entre tuples nomeadas
		04 - Igualdade com tuples diferentes
		05 - Faça como eu fiz na aula
		06 - Comparação entre tuplas (D / E / F)
		07 - Aridade de tuplas
		08 - O que aprendemos?
	02 - Expression variables
		01 - Expression Variables em campos
		02 - Expression Variables no Liqn
		03 - Faça como eu fiz na aula
		04 - Usando expression variables (A / B / C)
		05 - O que aprendemos?
	03 - Reatribuição em Refs
		01 - Reatribuição em refs
		02 - Foreach com refs
		03 - Faça como eu fiz na aula
		04 - Erro com ref var (A)
		05 - O que aprendemos?
	04 - Backfield attributes
		01 - Backing field attribute
		02 - Faça como eu fiz na aula
		03 - Usando backfield attributes (C)
		04 - O que aprendemos?
	05 - Melhorias em resolução de sobrecarga
		01 - Método estático ou de instância
		02 - Melhoria em métodos genéricos
		03 - Melhoria em metodos com argumentos de delegates
		04 - Resolução de sobrecargas (C)
		05 - Faça como eu fiz na aula
		06 - Conclusão
		07 - O que aprendemos?
C# Reflection parte 1: Metadados do seu código .NET
	01 - O pontapé de nossa aplicação Web
		01 - Introdução
		02 - Começando o nosso projeto
		03 - Projeto inicial
		04 - Escrevendo o código de suporte http
		05 - Conhecendo nosso Assembly
		06 - Trabalhando com o GetExecutingAssembly (A)
		07 - Trabalhando com Embedded Resources (C)
		08 - Embedded Resources e Streams (C)
		09 - Dando o pontapé no portal ByteBank
	02 - Usando nosso Assembly dinamicamente e convenções
		01 - Projeto da aula anterior
		02 - Criando convenções para acessar nosso assembly
		03 - Como um recurso é localizado no Assembly .NET (D)
		04 - Convenção de nome de recursos no assembly .NET (B)
		05 - Criando nossa controller
		06 - Usando as Actions de nossa controller
		07 - Como obter um Stream de recurso em nosso Assembly (B)
		08 - Criando manipulador de requisições!
	03 - Invocando métodos dinamicamente
		01 - Criando manipuladores de requisição
		02 - Criando instancias e invocando métodos dinamicamente
		03 - Usando o Activator (A)
		04 - O tipo ObjectHandle (B)
		05 - CallerMemberNameAttribute
		06 - Informações do método de chamada
		07 - O comportamento do CallerMemberName (C)
		08 - Desenvolvendo a ControllerBase e o ManipuladorRequisicaoController!
	04 - Trabalhando com sobrecargas de métodos
		01 - Projeto da aula anterior
		02 - Criando rotas parametrizaveis
		03 - Traduzindo nossas URLs
	05 - Invocando métodos com assinaturas complexas dinamicamente
C# Reflection parte 2: Implementando injeção de dependência do zero
	01 - Usando modelos em nossa View
	02 - Usando atributos como filtros
	03 - Conhecendo IoC
	04 - Implementando IoC
	05 - Ajustes finos e conclusão