<!DOCTYPE html>
<html>
<head lang="pt-br">
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <title>Página Inicial</title>
    <link href="~/Content/bootstrap/css/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/Style.css" rel="stylesheet" />
</head>
<body>
    @* usando uma view parcial 
	O método Partial procura uma view dentro da pasta ~/Views/Shared com o mesmo nome do argumento que foi passado. O conteúdo dessa view é colocado no lugar da 	chamada para o Partial.*@
    @Html.Partial("_MenuSuperior")
    <div class="container-fluid">
        <div class="row-fluid">
            <div class="span3">
                @* Esta tag help, chama a action do controller menu, que gerá o html do mesmo *@
                @Html.Action("Index", "Menu")
            </div>
            <div class="span9">
                @RenderBody()
            </div>
        </div>
    </div>
    @* quando quero importar uns scripts, uso a tag da section, com isso eu posso declarar o script de cada páginas nos seus respectivos
        arquivos cshtml
Para utilizarmos seções, precisamos demarcar no arquivo de template onde o código da seção deve ser substituído, fazemos isso utilizando a função RenderSection do Razor passando qual é o nome da seção que queremos utilizar.

O que a view definir dentro da seção Scripts será colocado no lugar do @RenderSection. Com esse código estamos definindo uma seção obrigatória chamada Scripts, porém nem toda view precisa importar scripts adicionais, então precisamos marcar a seção como opcional:(False)*@
    @RenderSection("Scripts", false)
@* Esse método pode receber opcionalmente um segundo argumento booleano que indica se a seção é opcional ou obrigatória. Quando não passamos o segundo argumento, o Razor assume que a seção é obrigatória e, portanto deve ser definida por todas as views. Caso a view não implemente uma seção obrigatória, uma exceção é lançada. *@
</body>
</html>
